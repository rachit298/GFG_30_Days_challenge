//{ Driver Code Starts
import java.util.*;
class Node{
    int data;
    Node next;
    
    Node(int a){
        data = a;
        next = null;
    }
    
}

class LinkedList{
    
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();
        while(t-->0){
            int n=sc.nextInt();
            int x=sc.nextInt();
            Node head=null;
            for(int i=0;i<n;i++)
            {int a=sc.nextInt();
            if(head==null){
                head=new Node(a);
            }
            else
                insert(head,a);
            }
        
            Solve y = new Solve();
            System.out.println(y.countTriplets(head,x));
        }
    }
    public static Node insert(Node head,int a){
        if(head==null){
            return new Node(a);
        }
        head.next=insert(head.next,a);
        return head;
    }
    
}


// } Driver Code Ends


//User function Template for Java

class Solve
{
    static int countTriplets(Node head, int x) 
    { 
        Node node = head;
        
        ArrayList<Integer> arr = new ArrayList<>();
        
        // copy all data into arraylist 
        while(node != null){
            
            arr.add(node.data);
            node = node.next;
        }
        
        // swap elements to get correct result for list in descending order
        if(arr.get(0) > arr.get(arr.size() - 1)){
            int start = 0, end = arr.size() - 1;
            while(start < end){
                int temp = arr.get(start);
                arr.set(start, arr.get(end));
                arr.set(end, temp);
                start++;
                end--;
            }
        }
        
        // count total triplets
        int count_of_triplets = 0;
        
        // iterate to check sum for 'x'
        for(int index = 0; index < arr.size(); index++){
            
            int start = index + 1, end = arr.size() - 1;
            
            while(start < end){
                
                int sum = arr.get(index) + arr.get(start) + arr.get(end);
                
                if(sum == x){
                    
                    count_of_triplets++;
                    start++;
                    end--;
                }
                else if(sum > x){
                    
                    end--;
                }
                else{
                    
                    start++;
                }
                
            }
            
        }
        
        return count_of_triplets;
    } 
}
