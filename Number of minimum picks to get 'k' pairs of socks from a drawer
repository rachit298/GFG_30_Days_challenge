//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;
class GFG {
    public static void main(String args[]) throws IOException {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t > 0) {
            int n, k, ans;
            n = sc.nextInt();
            int[] a = new int[n];
            for (int i = 0; i < n; i++) a[i] = sc.nextInt();
            k = sc.nextInt();
            Solution obj = new Solution();
            ans = obj.find_min(a, n, k);
            System.out.println(ans);
            t--;
        }
    }
}

// } Driver Code Ends


// User function Template for Java

class Solution {
    public int find_min(int[] a, int n, int k) {
        
        int pairs = 0;
        int sum_of_pairs = 0;
        
        for(int index = 0; index < a.length; index++){
            
            pairs += a[index]/2;
            
            if(a[index] % 2 == 0){
                sum_of_pairs += (a[index] - 2) / 2;
            }
            else{
                sum_of_pairs += (a[index] - 1) / 2;
            }
        }
        
        if(pairs < k){
            return -1;
        }
        
        if(sum_of_pairs >= k){
            return (2 * (k-1)) + (n + 1); // n+1 will ensure one last pair.
        }
        else{
            return (2 * sum_of_pairs) + n + (k - sum_of_pairs); // n + (k-sum_of_pairs) will ensure
        }                                                        // we get the required pair.
        
    }
}
