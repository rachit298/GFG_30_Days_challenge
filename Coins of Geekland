//{ Driver Code Starts
//Initial Template for Java

/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;

class GFG {
	public static void main (String[] args) {
		
		Scanner sc = new Scanner(System.in);
		int t = Integer.parseInt(sc.next());
		while(t-- > 0)
		{
		    int n = Integer.parseInt(sc.next());
		    int a[][] = new int[n][n];
		    
		    for(int i=0;i<n;i++)
		    {
		        for(int j=0;j<n;j++)
		        {
		            a[i][j] = Integer.parseInt(sc.next());
		        }
		    }
		    
		    int k = Integer.parseInt(sc.next());
		    Solution T = new Solution();
		    System.out.println(T.Maximum_Sum(a,n,k));
		}
	}
}
// } Driver Code Ends


class Solution
{
    public int Maximum_Sum(int mat[][],int N,int K){
        
        // matrix to store sum of matrix
        int[][] sum = new int[N+1][N+1];
        int max = Integer.MIN_VALUE;
        
        for(int row = 1; row <= N; row++){
            for(int col = 1; col <= N; col++){
                
                sum[row][col] = mat[row-1][col-1] + sum[row-1][col] + sum[row][col-1] - sum[row-1][col-1];
                
                if(row >= K && col >= K){
                    max = Math.max(max, sum[row][col] - sum[row][col-K] - sum[row-K][col] + sum[row-K][col-K]);
                }
            }
        }
        
        return max;
    }
}
